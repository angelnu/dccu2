#!/bin/sh
### BEGIN INIT INFO
# Provides:
# RequiredStart: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start:
# Default-Stop: 0 1 6
# Short-Description: start script
# Description: sets some environment options
### END INIT INFO

CFG_TEMPLATE_DIR=/etc/config_templates

DESC="basic system"
NAME="CCU2 docker"
. /lib/lsb/init-functions

init() {
  chmod 775 /var
	if [ ! -d /var/log ] ; then
	  mkdir /var/log
	fi
  chmod 775 /var/log
	if [ ! -d /var/tmp ] ; then
	  mkdir /var/tmp
	fi
  chmod 775 /var/tmp
	if [ ! -d /var/rega ] ; then
	  mkdir /var/rega
	fi
  chmod 775 /var/rega
	if [ ! -d /var/run ] ; then
	  mkdir /var/run
	fi
  chmod 775 /var/run
	if [ ! -d /var/spool ] ; then
	  mkdir /var/spool
	fi
  chmod 775 /var/spool
	if [ ! -d /var/lock ] ; then
	  mkdir /var/lock
	fi
  chmod 775 /var/lock
	if [ ! -d /var/cache ] ; then
	  mkdir /var/cache
	fi
  chmod 775 /var/cache
	if [ ! -d /var/lib ] ; then
	  mkdir /var/lib
	fi
  chmod 775 /var/lib
	if [ ! -d /var/lib/misc ] ; then
	  mkdir /var/lib/misc
	fi
  chmod 775 /var/lib/misc
	if [ ! -d /var/empty ] ; then
	  mkdir /var/empty
	fi
  chmod 600 /var/empty
	if [ ! -d /var/etc ] ; then
	  mkdir /var/etc
	fi
  chmod 775 /var/etc

  #modprobe fsl_usb2_udc.ko
	
	# Tunneling
    #modprobe tun
       
	# USB
    #modprobe ehci-hcd

	# HM/HmIP Dual Protocol
	#modprobe mxs_raw_auart
	#modprobe eq3_char_loop
	 
	if [ ! -d /usr/local/etc/config ] ; then
    mkdir -p /usr/local/etc/config
  	chmod 775 /usr/local/etc/config
  fi

  if [ ! -e /etc/config/TZ ] ; then
    cp $CFG_TEMPLATE_DIR/TZ /etc/config
  fi

  # update /etc/config/localtime and /etc/config/timezone
  /bin/updateTZ.sh
}

start() {
	log_daemon_msg "Starting ${DESC}" "${NAME}"
	init
	log_end_msg 0
}

stop () {
  # check if we should install an addon
  if [ -r /usr/local/.doAddonInstall ]; then
    /bin/install_addon
    rm -f /usr/local/.doAddonInstall
  fi
}

restart() {
	start
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|reload)
	restart
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?

