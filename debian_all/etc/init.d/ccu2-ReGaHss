#!/bin/sh
### BEGIN INIT INFO
# Provides: ReGaHss
# RequiredStart: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start:
# Default-Stop: 0 1 6
# Short-Description: Starts ReGaHss.
# Description: Starts ReGaHss.
### END INIT INFO

CREATE_DIRS='/usr/local/etc/config/rc.d /usr/local/etc/config/addons/www'

LOGLEVEL_REGA=2
PIDFILE=/var/run/ReGaHss.pid
PID=-1
REGA_BIN_VERSION=NORMAL
REGA_BIN_FILE=/bin/ReGaHss.normal

DESC="ReGaHss-service"
. /lib/lsb/init-functions

init() {
	for i in $CREATE_DIRS; do mkdir -p $i; done
       
	if [ ! -d /etc/config/userprofiles ] ; then
    mkdir /etc/config/userprofiles
  fi
  if [ -e /etc/config/syslog ] ; then
    . /etc/config/syslog
  fi
  if [ -e /etc/config/ReGaHssVersion ] ; then
		REGA_BIN_VERSION=$(cat /etc/config/ReGaHssVersion)
	fi
	case ${REGA_BIN_VERSION} in
		NORMAL) 	REGA_BIN_FILE=/bin/ReGaHss.normal;;
		LEGACY)		REGA_BIN_FILE=/bin/ReGaHss;;
		COMMUNITY)	REGA_BIN_FILE=/bin/ReGaHss.community;;
	esac
}

start() {
	log_daemon_msg "Starting ${DESC}" "${REGA_BIN_FILE}"
	init
	start-stop-daemon -S -q -b -m -p $PIDFILE --exec $REGA_BIN_FILE -- -f /etc/rega.conf -l $LOGLEVEL_REGA < /dev/null&
	log_end_msg 0
}

stop() {
	log_daemon_msg "Stopping ${DESC}" "ReGaHss"
	if [ ! -f $PIDFILE ] ; then
		log_failure_msg "pid-file $PIDFILE does not exist, abort stopping, check ps -ef|grep ReGaHss manually"
		exit
	fi
	PID=`cat $PIDFILE`

  # as ReGaHss is not saving its config upon termination we force a final
  # config save now
  echo -n "."
  echo "load tclrega.so; rega system.Save()" | /bin/tclsh 2>/dev/null
  sync
  
	start-stop-daemon -K -q -p $PIDFILE

	# wait for ReGaHss to terminate before restarting (otherwise it could not perform a socket bind)
  if [ ${PID} -ne -1 ]
	then
		for i in 1 2 3 4 5 6 7 8 9 10
		do
			sleep 4
			if [ ! -e /proc/$PID ]
			then
				log_end_msg 0
				break
			fi
	    if [ ${i} -eq 10 ]; then
				log_end_msg 1
	    fi
		done
	fi
	rm -f $PIDFILE
}

restart() {
	stop
	start
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|reload)
	restart
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?

